package com.iri.hdfs;

import java.io.IOException;


import org.apache.commons.io.IOUtils;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FSDataOutputStream;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.permission.FsPermission;

import com.sun.jersey.core.spi.scanning.Scanner;
import java.util.Scanner;

public class Hdfs {
	
	private static String nuevaCarpeta = "nose";
	private static String nameArch = "archivo";
	private static String contenido = "Este es el archivo creado desde API Java";
	private static String usuarios;
	private static String permisos;
	
	private static String rutaHDFS = "/nose";
	private static String ruta;
	private static String rutaLocal =  "/home/cloudera/nose";
	private static String archivoLocal = "/home/cloudera/nose/Local";

	public static void main(String[] args) {
		
		//Creamos la configuración de acceso al HDFS
		Configuration conf = new Configuration(true);
		conf.set("fs.defaultFS", "hdfs://10.0.2.15:8020/");
		
		System.setProperty("HADOOP_USER_NAME", "hdfs");
		
		try {
			//Crear objeto FileSystem
			FileSystem fs = FileSystem.get(conf);
			System.out.print("new name");
		
			String home = fs.getHomeDirectory().toString();
			x
			
			
			//En caso de que no exista la carpeta, crear la carpeta.
			if(!fs.exists(new Path(home + "/" + nuevaCarpeta))) {
				fs.mkdirs(new Path(home + "/" + nuevaCarpeta));
				
				//nombre de archivos nuevos creo
				System.out.print("cambiale el nombre");
				Scanner nameArch = new Scanner(System.in);
				nameArch.nextLine();
				nameArch=nameArch.toString();
				
			}
			
			System.out.println(ANSI_RED + "//// LISTADO SIMPLE" + ANSI_RESET);

		    File nose = new File(sCarpAct);
		    String[] listado = nose.list();
		    if (listado == null || listado.length == 0) {
		      System.out.println("No hay elementos dentro de la carpeta actual");
		      return;
		    }
		    else {
		      for (int i=0; i< listado.length; i++) {
		        System.out.println(listado[i]);
		      }
		    }
			
			
			//Si no existe el archivo, hay que crearlo
			Path rutaArchivo = new Path(home + "/" + nuevaCarpeta + "/" + nombreArchivo);
			FSDataOutputStream outputStream = null;
			
			if(!fs.exists(rutaArchivo)) {
				outputStream = fs.create(rutaArchivo);
				outputStream.writeBytes(contenido);
				outputStream.close();
			}
			
			//ver la ruta de los archivos
			System.out.print("rutaLocal");
			System.out.println("¿en donde cambiaras la ruta?");
	    	Scanner ruta = new Scanner(System.in);
	    	ruta.nextLine();
	    	nose=ruta.toString();
	    	System.out.print("/nose" + "rutaLocal");
			 	
			// modificar el propietario o los permisos del archivo.
			Scanner user = new Scanner(System.in);
			user.nextLine();
			usuario=user.toString();
			fs.setOwner(rutaArchivo, "usuario" );
			
			
			//asignar permisos 
			Scanner permisos = new Scanner(System.in);
			permisos.nextLine();
			usuario=permisos.toString();
			FsPermission permisos = FsPermission.valueOf("permisos");
			fs.setPermission(rutaArchivo, permisos);
			
			
			
			
		} catch (IOException e) {
			// Auto-generated catch block
			e.printStackTrace();
		}		
	}
}
